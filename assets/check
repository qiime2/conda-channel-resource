#!/usr/bin/env python
import re
import sys
import json
import pkg_resources

import common


def main(source, version):
    pkg_name = source['pkg_name']
    matched = source.pop('matched', False)
    pkg_version = common.from_version(version)
    regex = source.get('regex')
    with common.connect(source) as conn:
        data = common.ChannelData(conn=conn)

    pkg_versions = data.get_versions(pkg_name, matched)
    sorted_versions = sorted(pkg_versions, key=pkg_resources.parse_version)
    if regex is not None:
        regex = re.compile(regex)
        sorted_versions = list(filter(regex.match, sorted_versions))
    if pkg_version is None or pkg_version not in sorted_versions:
        idx = -1
    else:
        idx = sorted_versions.index(pkg_version)

    return [common.to_version(v) for v in sorted_versions[idx:]]


if __name__ == '__main__':
    options = json.load(sys.stdin)
    response = main(options['source'],
                    options.get('version'))
    print(json.dumps(response))
